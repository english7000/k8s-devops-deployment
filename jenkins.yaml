apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx     #这里要注意一下，这里的nginx是在部署ingress的时候就设定的名字可以使用kubectl describe daemonsets.apps -n ingress-nginx 查看
### ingress部分注释掉的都是https的annotations

#    nginx.ingress.kubernetes.io/ssl-redirect: "true"
#    nginx.ingress.kubernetes.io/rewrite-target: /
#    nginx.ingress.kubernetes.io/secure-backends: "true"
#    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#    nginx.ingress.kubernetes.io/use-regex: "true"
  name: jenkins
  namespace: devops
spec:
#  tls:
#  - hosts:
#    - k8s-dashboard.com
#    secretName: kubernetes-dashboard-certs
  rules:
  - host: jenkins.com
    http:
      paths:
      - backend:
          serviceName: jenkins
###    目前只暴露了8080端口用于web使用
          servicePort: 8080
        path: /


---
###  创建SERVICE链接下面的pod
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: devops
  labels:
    devops: enable
spec:
  type: ClusterIP
  ports:
### 多个port的写法
  - port: 8080
    name: web
  - port: 50000
    name: slave
#  clusterIP: None
  selector:
    devops: enable


---
apiVersion: apps/v1
kind: StatefulSet
### 这下面的报考metadata以及spec都是定义的pod的属性，包括标签。
metadata:
  name: devops-tools
  namespace: devops
spec:
  selector:
    matchLabels:
      devops: enable
  serviceName: "devops"
  replicas: 1
  template:
    metadata:
      labels:
       devops: enable
### 这下面才是一些选择
    spec:
      nodeSelector:
        devops: enable
      containers:
      - name: jenkins
        image: jenkins/jenkins:2.277.3-lts-centos7
        ports:
        - containerPort: 8080
          name: web
        - containerPort: 50000
          name: slave
        volumeMounts:
        - name: jenkins-storage
          mountPath: /var/jenkins_home
        volumeMounts:
        - name: jenkins-blue-ocean
          mountPath: jenkinsci/blueocean

###注意多PVC定义的方式和写法
  volumeClaimTemplates:
  - metadata:
       name: jenkins-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        limits:
          storage: 10Gi
        requests:
          storage: 3Gi
      storageClassName: rook-ceph-block
      volumeMode: Filesystem
  - metadata:
       name: jenkins-blue-ocean
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        limits:
          storage: 10Gi
        requests:
          storage: 1Gi
      storageClassName: rook-ceph-block
      volumeMode: Filesystem
